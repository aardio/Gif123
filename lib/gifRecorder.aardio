//gifRecorder 录屏
import config;
import thread.event;

class gifRecorder{
	ctor(){
		this.eventGif = ..thread.event(); 
		this.eventTimer = ..thread.event(,true); 
	};
	start = function(){
		this.stop();
		
		..win.setTopmost(..mainForm.hwnd);
		if(..config.setting.countdown){
			..mainForm.btnRecord.disabled = true;
			
			import countdown;
			var cd = countdown(..mainForm.hwnd);
			cd.center(..mainForm.plusPreview.hwnd);
			cd.doModal(,4/*_SW_SHOWNOACTIVATE*/);
			
			..mainForm.btnRecord.disabled = false;
		}
		
		this.eventGif.reset();
		this.eventTimer.reset();
		
		this.hThreadGif = ..thread.create( 
			function(mainForm,eventTimer,eventGif){
				import gdi;
				import soImage;
				import config;
				
				gifFile = soImage.gifFile(config.__pathRecording); 
				if(!gifFile) return mainForm.msgboxErr(uiLanguage.recodeErrMsg ++ config.__pathRecording); 
				gifFile.disposalMethod = 1; 
				gifFile.lastFrameTick = null;  
				
				mainForm.onStartRecording();
	 
	 			var pointerSize = config.setting.captureMouse ? config.setting.pointerSize : null;
				var dpiShrink = config.setting.chkShrink;
				var dpiScale =  gdi.getDpiScale();
				var hwndPreview = mainForm.plusPreview.hwnd;
			
				var imgScreen = soImage();
				var imgCursor = soImage();
				
				var max = ..math.max;
				var time_tick = ..time.tick;
				var getPos = ..win.getPos;

				while( eventGif.wait() ){
					if(eventTimer.wait(0)){break;}
					
					var tk = time_tick();
					if(gifFile.lastFrameTick){
    					var delay = (tk-gifFile.lastFrameTick)/10;//抓下帧以前保存上一帧的延时  
    					imgScreen.decreaseBpp(8,256,8);
    					gifFile.write(imgScreen,true,delay);
					} 
    				gifFile.lastFrameTick = tk;
    				
					var x,y,cx,cy = getPos(hwndPreview,true);
					imgScreen.capture(,x,y,cx,cy,pointerSize); 
					 
    				if(dpiShrink && (dpiScale>1.1)){
    					imgScreen.resize2(cx/dpiScale,cy/dpiScale);
    				}
				}	
				
				gifFile.close(); 
				gifFile = null; 
			},..mainForm,this.eventTimer,this.eventGif
		)
		
		this.hThreadTimer = ..thread.create( 
			function(mainForm,eventTimer,eventGif){ 
				
				var delay = 1000/mainForm.tbFps.progressPos; 
				while( ! eventTimer.wait(delay) ){  
					 eventGif.set();//使事件对象切换为有信号状态,截屏1帧
				}
				
				eventGif.set();
			},..mainForm,this.eventTimer,this.eventGif
		)		
	}
	
	stop = function(){
		if(this.hThreadGif){
			this.eventTimer.set();//使事件对象切换为有信号状态,使 wait 函数退出
			..thread.waitOne(this.hThreadGif);
			..thread.waitOne(this.hThreadTimer);
			
			this.hThreadGif = null;
			this.hThreadTimer = null;
		} 
	} 
}
