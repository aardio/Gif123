import config;
import uiLanguage;
import fonts.FontAwesomeGif123; 
import gifRecorder; 
import fsys;
import fsys.environment;
import win.region.hole;
import win.ui.atom;
import win.ui;
/*DSG{{*/
mainForm = win.form(text="Gif123 - 录屏工具";right=723;bottom=512;bgcolor=4752084;border="none")
mainForm.add(
btnCopy={cls="plus";text="复制";left=158;top=0;right=225;bottom=30;align="left";color=3947580;disabled=1;dl=1;dt=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesomeGif123');padding={left=2}};iconText='\uF0EA';notify=1;textPadding={left=21};z=5};
btnExplore={cls="plus";text='\uF07C';left=389;top=2;right=421;bottom=32;color=3947580;dl=1;dt=1;font=LOGFONT(h=-15;name='FontAwesomeGif123');notify=1;z=4};
btnRecord={cls="plus";text="录制";left=5;top=0;right=80;bottom=30;align="left";color=3947580;dl=1;dt=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-13;name='FontAwesomeGif123');padding={left=2}};iconText='\uF111';notify=1;textPadding={left=21};z=3};
btnSettings={cls="plus";text='\uF013';left=426;top=2;right=458;bottom=32;color=3947580;dl=1;dt=1;font=LOGFONT(h=-17;name='FontAwesomeGif123');notify=1;z=12};
btnWebSite={cls="plus";text='\uF09B';left=462;top=2;right=494;bottom=32;color=3947580;dl=1;dt=1;font=LOGFONT(h=-17;name='FontAwesomeGif123');notify=1;z=9};
chkPreview={cls="plus";text="预览";left=79;top=0;right=157;bottom=30;align="left";dl=1;dt=1;font=LOGFONT(h=-14);iconStyle={align="left";font=LOGFONT(h=-14;name='FontAwesomeGif123');padding={left=2}};iconText='\uF0C8 ';notify=1;textPadding={left=21};z=10};
editGifsicleArgs={cls="edit";left=201;top=516;right=531;bottom=540;align="right";db=1;dr=1;edge=1;hide=1;z=13};
lbFps={cls="plus";text="FPS：";left=227;top=7;right=265;bottom=24;align="right";color=7895160;dl=1;dt=1;notify=1;z=7};
lbFps2={cls="plus";text="12";left=361;top=7;right=385;bottom=24;align="left";color=7895160;dl=1;dt=1;notify=1;z=8};
plusPosition={cls="plus";text="Size: 100 x 100";left=532;top=515;right=663;bottom=540;align="left";bgcolor=4752084;clipBk=false;db=1;dr=1;forecolor=16777215;hide=1;iconStyle={align="left";font=LOGFONT(name='FontAwesomeGif123');padding={left=10;top=1}};iconText='\uF255';notify=1;paddingBottom=2;paddingLeft=2;paddingRight=2;paddingTop=2;textPadding={left=24};z=11};
plusPreview={cls="plus";left=2;top=32;right=722;bottom=512;bgcolor=10789024;db=1;dl=1;dr=1;dt=1;repeat="scale";z=2};
tbFps={cls="plus";left=267;top=9;right=358;bottom=22;bgcolor=-2512093;border={radius=-1};color=1995263;dl=1;dt=1;foreRight=13;forecolor=-14911489;paddingBottom=5;paddingTop=5;z=6};
titleBar={cls="bkplus";left=-6;top=-2;right=724;bottom=30;bgcolor=10789024;dl=1;dr=1;dt=1;forecolor=16777215;linearGradient=180;z=1}
)
/*}}*/

var atom,hwnd = mainForm.atom("DA909863-CBDD-4729-9E95-B1E46EB6E859.GIF123");
if(!atom) return win.setForeground(hwnd)

var holePreview = win.region.hole(mainForm.plusPreview);
 
var recorder = gifRecorder();
import mouse.highlighter;
mainForm.btnRecord.oncommand = function(id,event){
	mainForm.setCurrentPreviewImage(null);
	
	if(mainForm.btnRecord.recording == true){
		
		if(config.setting.chkHighlight){
			if(mainForm.mouseHighlighter){
				mainForm.mouseHighlighter.close();
				mainForm.mouseHighlighter = null;
			}
		}
	
		mainForm.btnRecord.disabled = true;
		recorder.stop();
		
		mainForm.btnRecord.disabledText = { '\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
		
		var outputFilename = config.setting.outputFilename;
		if(string.indexOf(outputFilename,"%")){
			outputFilename = tostring(time(),outputFilename)
		}
		
		config.setting.pathOutput = io.joinpath( fsys.environment.expand(config.setting.outputDir),outputFilename);
		fsys.copy(config.__pathRecording,config.setting.pathOutput);
		
		if(config.setting.chkOptimize){
			thread.invokeAndWait(
				function(pathOutput,gifsicleArgs2){
					import process.gifsicle;
					var out = process.gifsicle.get(pathOutput,,gifsicleArgs2);
				} ,config.setting.pathOutput,config.setting.gifsicleArgs2
			) 	
		}
		 
		mainForm.setCurrentPreviewImage(config.setting.pathOutput);
		
		mainForm.btnRecord.disabledText = null;
		mainForm.chkPreview.disabled = false;
		mainForm.btnCopy.disabled = false;
		mainForm.tbFps.disabled = false;
		mainForm.btnSettings.disabled = false; 
		mainForm.btnExplore.disabled = false; 
		mainForm.btnRecord.text = uiLanguage.record;
		mainForm.btnRecord.iconText = '\uF111';
		mainForm.btnRecord.recording = false;
		win.setTopmost(mainForm.hwnd,false); 
		return;
	}

	recorder.start();  
}

mainForm.onStartRecording = function(){
	mainForm.btnRecord.recording = true;
	mainForm.btnRecord.iconText = '\uF0C8';
	mainForm.btnRecord.text = uiLanguage.stop; 
	mainForm.chkPreview.disabled = true;
	mainForm.btnExplore.disabled = true; 
	mainForm.btnCopy.disabled = true;
	mainForm.tbFps.disabled = true; 
	mainForm.btnSettings.disabled = true; 
	win.setTopmost(mainForm.hwnd); 
	
	if(config.setting.chkHighlight){
		if(!mainForm.mouseHighlighter){
			mainForm.mouseHighlighter = mouse.highlighter(mainForm,config.setting.highlightColor
				,config.setting.highlightSize,config.setting.highlightPadding);
			mainForm.mouseHighlighter.show();	
		}
	} 	
}

mainForm.setCurrentPreviewImage = function(path){
	mainForm.plusPreview.$currentImagePath = path;
	if(path) fsys.copy(path,config.__pathGifsicleTemp);
}

mainForm.getCurrentImage = function(){
	if(mainForm.btnRecord.recording){
		mainForm.msgboxErr(uiLanguage.stopRecoding);
		return 
	}
	
	var path = mainForm.plusPreview.$currentImagePath; 
	if(!path) path = config.setting.pathOutput;
	
	if(!io.exist(path)){ 
		mainForm.msgboxErr(uiLanguage.notFound);
		return;
	}
	
	return path;	
} 

mainForm.chkPreview.oncommand = function(id,event){
 
	if(mainForm.chkPreview.checked){
		previewPath = mainForm.getCurrentImage();
		if(!previewPath) {
			mainForm.chkPreview.checked = false;
			return;
		} 
 
		mainForm.btnRecord.disabled = true;
		mainForm.btnCopy.disabled = false;
		mainForm.plusPreview.$currentImagePath = previewPath;
		
		var buf = string.loadBuffer(previewPath);
		mainForm.plusPreview.setBackground(buf,false,true);
		 
		mainForm.plusPosition.iconText = '\uF255';
		mainForm.plusPosition.text = "Size: " + math.size64(#buf).format();
		mainForm.plusPosition.show(true); 
		
		mainForm.editGifsicleArgs.text = config.setting.gifsicleArgs2;
		mainForm.editGifsicleArgs.show(true);
		
		mainForm.plusPreview.predraw();
		holePreview.enable(false);
		mainForm.disableDragFullWindow = true;
		
		mainForm.setFocus();
	}
	else {
		holePreview.enable(true);
		mainForm.disableDragFullWindow = false;
		mainForm.btnRecord.disabled = false;
		mainForm.plusPosition.show(false);
		mainForm.editGifsicleArgs.show(false); 
		mainForm.plusPosition.iconText = "";
		
		var old = mainForm.plusPreview.setBackground(null);
		if(old){ old.dispose(); }
	}
}
mainForm.plusPosition.iconText = "";

mainForm.chkPreview.disabled = true;

import process;
mainForm.btnExplore.oncommand = function(id,event){
	
	var path = mainForm.getCurrentImage();
	if(!path) return;
	
	process.exploreSelect(path)
}

import win.clip.gif;
mainForm.btnCopy.oncommand = function(id,event){

	var path = mainForm.getCurrentImage();
	if(!path) return;
 
	win.clip.gif.write( path );
	mainForm.btnCopy.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250';text=''} 
	win.delay(200);
	mainForm.btnCopy.disabledText = null;
}

mainForm.btnWebSite.oncommand = function(id,event){
	process.openUrl("https://github.com/aardio/gif123");
}

import style;
mainForm.chkPreview.skin(style.checkbox);
mainForm.btnRecord.skin(style.record);
mainForm.btnCopy.skin(style.button);
mainForm.btnSettings.skin(style.button);
mainForm.btnWebSite.skin(style.button);
mainForm.btnExplore.skin(style.button);
mainForm.tbFps.skin(style.trackbar);
mainForm.tbFps.setTrackbarRange(1,36);
mainForm.tbFps.progressPos = 12;
mainForm.tbFps.onPosChanged = function( pos,thumbTrack ){
	mainForm.lbFps2.text = pos;
}

import win.ui.tooltip;
var tooltipCtrl = win.ui.tooltip(mainForm);
var setUiLanguage = function(lang){
	..table.assign(uiLanguage,lang);
	
	win.title = uiLanguage.title; 
	mainForm.text = uiLanguage.title;
	mainForm.btnRecord.text = uiLanguage.record; 
	mainForm.chkPreview.text = uiLanguage.preview;
	mainForm.btnCopy.text = uiLanguage.copy;
	
	tooltipCtrl.addTool(mainForm.lbFps,uiLanguage.fpsTip); 
	tooltipCtrl.addTool(mainForm.lbFps2,uiLanguage.fpsTip); 
	tooltipCtrl.addTool(mainForm.btnExplore,uiLanguage.exploreTip); 
	tooltipCtrl.addTool(mainForm.btnWebSite,uiLanguage.gitTip); 
	tooltipCtrl.addTool(mainForm.btnRecord,uiLanguage.hotkeyTip); 
	tooltipCtrl.addTool(mainForm.chkPreview,uiLanguage.previewTip);
	tooltipCtrl.addTool(mainForm.btnCopy,uiLanguage.copyTip); 
	tooltipCtrl.addTool(mainForm.btnSettings,uiLanguage.settings);
	tooltipCtrl.addTool(mainForm.plusPosition,uiLanguage.optimizeGif); 
}

var lcid = ::Kernel32.GetUserDefaultLCID();
if( lcid==0x404/*zh-TW*/ || lcid == 0x0C04/*zh-HK*/ || lcid == 0x1404/*zh-MO*/ ){
	setUiLanguage(uiLanguage.cht);
}
elseif( lcid==0x0412/*ko-KR*/ ){
	setUiLanguage(uiLanguage.ko);
	mainForm.btnRecord.right = mainForm.btnRecord.right - 10;
	mainForm.chkPreview.left = mainForm.chkPreview.left - 10;
}
elseif( lcid==0x0411/*ja-JP*/ ){
	setUiLanguage(uiLanguage.jp);
	mainForm.btnRecord.right = mainForm.btnRecord.right - 10;
	mainForm.chkPreview.left = mainForm.chkPreview.left - 10;
	mainForm.chkPreview.right = mainForm.chkPreview.right +  15;
 	
	var x,y,cx,cy = mainForm.btnCopy.getPos();
	mainForm.btnCopy.setPos(x+20,y,cx+10,cy);
	 
	for(i,ctrl in ({mainForm.lbFps,mainForm.lbFps2,mainForm.tbFps,mainForm.btnExplore,mainForm.btnWebSite,mainForm.btnSettings})){
		var x,y = ctrl.getPos()
		ctrl.setPos(x+25,y);
	} 
}
elseif( lcid!=0x804/*zh-CN*/ && lcid!=0x1004/*zh-SG*/ ){
	setUiLanguage(uiLanguage.en);
}
else {
	setUiLanguage(uiLanguage.chs);
}

import win.ui.minmax;
win.ui.minmax(mainForm,201,71);
mainForm.adjust = function( cx,cy,wParam ) {	
	var dpiScaleX = mainForm.dpiScaleX; 
	if(mainForm.sizing) return;
	
	mainForm.btnWebSite.hide = cx/dpiScaleX<630; 
	mainForm.btnSettings.hide = cx/dpiScaleX<605;
	mainForm.btnExplore.hide = cx/dpiScaleX<580; 
	mainForm.lbFps2.hide = cx/dpiScaleX<550;
	mainForm.tbFps.hide = cx/dpiScaleX<519;
	mainForm.lbFps.hide = cx/dpiScaleX<519;
	mainForm.btnCopy.hide = cx/dpiScaleX<360;
	mainForm.chkPreview.hide = cx/dpiScaleX<300;
	
	if(mainForm.chkPreview.checked) mainForm.editGifsicleArgs.hide = cx/dpiScaleX<550;
};

mainForm.btnRecord.hkId = mainForm.reghotkey(
    function(id,mod,vk){
		mainForm.btnRecord.oncommand(); 
	},2/*_MOD_CONTROL*/|1/*_MOD_ALT*/| 4/*_MOD_SHIFT*/,'Z'#
);

mainForm.onDropFiles = function(files){
	if(!..io.exist(files[1],4)) return;
	
	if(mainForm.btnRecord.recording){ 
		return mainForm.msgboxErr(uiLanguage.stopRecoding);
	}

	if(string.endWith(files[1],".gif",true)){
		mainForm.setCurrentPreviewImage(files[1]);  
		mainForm.chkPreview.checked = true; 
		mainForm.chkPreview.disabled = false;
		mainForm.chkPreview.oncommand();
	}
}

mainForm.onEnterSizeMove = function(){
	if(!mainForm.chkPreview.checked){
		mainForm.sizing = 1;
	} 
}

import win.ui.simpleWindow;
var wndFrame = win.ui.simpleWindow(mainForm);

mainForm.onExitSizeMove = function(){
	if(!mainForm.sizing) {
		return;
	}
	mainForm.sizing = false; 
	
	mainForm.btnRecord.show(true);
	mainForm.plusPosition.show(false);
	wndFrame.titlebarMin.show(true);
    wndFrame.titlebarMax.show(true);
    wndFrame.titlebarClose.show(true);
    mainForm.adjust();
} 

mainForm.wndproc = {
	[ 0x0214/*_WM_SIZING*/ ] = function(){ 
		if(!mainForm.sizing) return;
		
		if(mainForm.sizing = 1){
			mainForm.sizing = 2;
    		mainForm.plusPosition.show(true);
    		mainForm.btnRecord.show(false);
    		mainForm.chkPreview.show(false);
    		mainForm.btnCopy.show(false);
    		mainForm.lbFps.show(false);
    		mainForm.lbFps2.show(false);
    		mainForm.tbFps.show(false);
    		mainForm.btnExplore.show(false);
    		mainForm.btnSettings.show(false);
    		mainForm.btnWebSite.show(false);
    		wndFrame.titlebarMin.show(false);
    		wndFrame.titlebarMax.show(false);
    		wndFrame.titlebarClose.show(false);
		}
		
		var x,y,cx,cy = mainForm.plusPreview.getPos();
		mainForm.plusPosition.text = uiLanguage.size +": " + cx + " x " + cy;
	}
}

mainForm.btnSettings.oncommand = function(id,event){
	var frmChild = mainForm.loadForm("\dlg\setting.aardio");
	frmChild.doModal();
}

mainForm.plusPosition.orphanWindow();
mainForm.disableDragFullWindow = false;

mainForm.plusPosition.skin( {
		background={
			default=0xFF77B200;
			disabled=0xFFCCCCCC;
			hover=0xFF6600B3
		};
		color={
			default=0xFF000000;
			disabled=0xFF6D6D6D
		}
	} )

mainForm.plusPosition.oncommand = function(id,event){
	var outPath = mainForm.getCurrentImage();
	if(!outPath) return;
	
	var inPath;
	if(outPath == config.setting.pathOutput){
		inPath = config.__pathRecording;
	}
	else {
		inPath = config.__pathGifsicleTemp;
	}
	
	var gifsicleArgs2 = mainForm.editGifsicleArgs.text;
	if(string.indexOf(gifsicleArgs2,"--help") || string.indexOf(gifsicleArgs2,"?")){
		import process;
		process.openUrl("https://www.lcdf.org/gifsicle/man.html");
		return;	
	}
	
	gifsicleArgs2 = string.replace(gifsicleArgs2,"(\d+)--","\1 --");
	gifsicleArgs2 = string.replace(gifsicleArgs2,"--colors(\d+)","--colors \1");
	mainForm.editGifsicleArgs.text = gifsicleArgs2;
	
	mainForm.chkPreview.disabled = true;
	mainForm.plusPosition.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250';text=''} 
	var ret = thread.invokeAndWait(
		function(inPath,outPath,gifsicleArgs2){
			import process.gifsicle;
			return process.gifsicle.get(inPath,outPath,gifsicleArgs2);
		} ,inPath,outPath,gifsicleArgs2
	);
	
	mainForm.plusPosition.disabledText = null;	
	mainForm.chkPreview.disabled = false;

	var buf = string.loadBuffer(outPath);
	if(#buf){
		mainForm.plusPreview.setBackground(buf,false,true);
		mainForm.plusPosition.text = "Size: " + math.size64(#buf).format()		
	} 
	
	if(#ret){
		mainForm.editGifsicleArgs.setFocus();
		if(string.find(ret,"\:\s*warning\:")){
			mainForm.editGifsicleArgs.showWarningTip(ret);
		}
		else {
			mainForm.editGifsicleArgs.showErrorTip(ret);
		}
	}
}
mainForm.editGifsicleArgs.orphanWindow();

import win.ui.accelerator;
var accelerator = win.ui.accelerator({
    { 
        ctrl = true; shift = true; alt = true; vkey = 'Z'#;  
        oncommand = function() {
        	mainForm.btnRecord.oncommand();
        }
    };  
    { 
        ctrl = true; vkey = 'Z'#;  
        oncommand = function() {
        	mainForm.btnRecord.oncommand();
        }
    }; 
    { 
        ctrl = true; vkey = 'C'#;  
        oncommand = function() {
        	mainForm.btnCopy.oncommand()
        }
    };   
    { 
        ctrl = true; vkey = 'P'#;  
        oncommand = function() {
            if(!mainForm.chkPreview.disabled){
            	mainForm.chkPreview.checked = !mainForm.chkPreview.checked;
            	mainForm.chkPreview.oncommand()
            } 
        }
    };   
},mainForm );

mainForm.onDestroy = function(){
    recorder.stop();
}

mainForm.editGifsicleArgs.wndproc = function(hwnd,message,wParam,lParam){
	if(message == 0x101/*_WM_KEYUP*/){
		if(wParam==0xD/*_VK_RETURN*/){
			mainForm.plusPosition.oncommand();
		}
	} 
}

mainForm.show();
win.setTopmost(mainForm.hwnd,true);
win.loopMessage();